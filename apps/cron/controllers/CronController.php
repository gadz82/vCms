<?php
class CronController extends ControllerBase{

    /**
     * @var DateTime
     */
    protected $now;

    /**
     * @var \Phalcon\Db\Adapter\Pdo\Mysql
     */
    protected $connection;

    public function initialize(){
        parent::initialize();
        ini_set('max_execution_time', 0);
        set_time_limit(0);
    }

    public function grabAction(){
        try{
            $comuni = ViewItaly::find([
                'conditions' => "regione IN('Lazio','Campania','Calabria') AND istat >= 58090"
            ]);
            foreach ($comuni as $comune){
                // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
                $ch = curl_init();

                curl_setopt($ch, CURLOPT_URL, 'https://www.conad.it/bin/conadfoundation/RetrieveStoresConsumer');
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
                curl_setopt($ch, CURLOPT_POSTFIELDS, "lat=".$comune->lat."&lng=".$comune->lng);
                curl_setopt($ch, CURLOPT_POST, 1);
                curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');

                $headers = array();
                $headers[] = 'Pragma: no-cache';
                $headers[] = 'Origin: https://www.conad.it';
                $headers[] = 'Accept-Encoding: gzip, deflate, br';
                $headers[] = 'Accept-Language: it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7';
                $headers[] = 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36';
                $headers[] = 'Content-Type: application/x-www-form-urlencoded; charset=UTF-8';
                $headers[] = 'Accept: */*';
                $headers[] = 'Cache-Control: no-cache';
                $headers[] = 'X-Requested-With: XMLHttpRequest';
                $headers[] = 'Cookie: _ga=GA1.2.997850400.1551953851; _gid=GA1.2.746981773.1551953851; UTMparams={}; AMCVS_D3A6DFCB5937B7F90A495CEB%40AdobeOrg=1; AMCV_D3A6DFCB5937B7F90A495CEB%40AdobeOrg=1406116232%7CMCIDTS%7C17963%7CMCMID%7C83361989278325961392031551764685226115%7CMCAAMLH-1552560929%7C6%7CMCAAMB-1552560929%7C6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y%7CMCOPTOUT-1551963329s%7CNONE%7CMCAID%7CNONE%7CvVersion%7C2.5.0; s_cc=true; cookieconsent_dismissed=yes; prefstore=000143; mbox=check#true#1551956339|session#a2e1dc45c20945d29b2a88a361c86f0a#1551958139|PC#a2e1dc45c20945d29b2a88a361c86f0a.26_19#1553165879; s_sq=conadconadglobal%3D%2526c.%2526a.%2526activitymap.%2526page%253DRisultati%252520Ricerca%252520Negozio%2526link%253DCerca%2526region%253DBODY%2526pageIDType%253D1%2526.activitymap%2526.a%2526.c%2526pid%253DRisultati%252520Ricerca%252520Negozio%2526pidt%253D1%2526oid%253DCerca%2526oidt%253D3%2526ot%253DSUBMIT; '.
                    'pdv-search={\"lat\":'.$comune->lat.',\"lng\":'.$comune->lng.',\"types\":\"locality,political\",\"txt\":\"'.$comune->comune.', '.$comune->provincia.', Italia\",\"pagePath\":\"/content/conad/it/ricerca-negozi\"}';
                $headers[] = 'Connection: keep-alive';
                $headers[] = 'Referer: https://www.conad.it/ricerca-negozi.html';
                curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

                $result = curl_exec($ch);
                if (curl_errno($ch)) {
                    echo 'Error:' . curl_error($ch);
                    continue;
                }

                if(!empty($result)){
                    $punti = json_decode($result);
                    foreach($punti as $pdv){
                        $id_tipologia_punto_vendita = null;
                        $id_regione = null;
                        if($pdv->storetype == 1){

                            $tipologia_punto_vendita = \TipologiePuntoVendita::findFirst([
                                'conditions' => 'descrizione = :descrizione:',
                                'bind'       => ['descrizione' => $pdv->data],
                                'cache' => [
                                    "key" => "cronTipologiePdv.".$pdv->data,
                                    "lifetime" => 50000
                                ]
                            ]);
                            if($tipologia_punto_vendita) $id_tipologia_punto_vendita = $tipologia_punto_vendita->id;
                        } else {
                            if($pdv->storetype == 2) $id_tipologia_punto_vendita = 6; //PETSTORE
                            if($pdv->storetype == 3) $id_tipologia_punto_vendita = 7; //PETSTORE
                        }
                        if(is_null($id_tipologia_punto_vendita)) {
                            throw new \apps\cron\exception\CronException('Manca tipologia Punto Vendita :' . $pdv->data.' comune '.$comune->comune, \apps\cron\exception\CronException::ERROR);
                        }

                        $regione = \Regioni::findFirstByDescrizione($comune->regione);
                        $id_regione = $regione->id;
                        if(is_null($id_regione)) {
                            throw new \apps\cron\exception\CronException('Manca Regione :'.$comune->regione, \apps\cron\exception\CronException::ERROR);
                        }

                        $pv = PuntiVendita::findFirst([
                            'conditions' => 'id_pdv = :id_pdv: AND attivo = 1',
                            'bind' => ['id_pdv' => $pdv->id]
                        ]);
                        if(!$pv){
                            $pv = new PuntiVendita();
                            $pv->id_tipologia_punto_vendita = $id_tipologia_punto_vendita;
                            $pv->id_tipologia_stato = 1;
                            $pv->id_regione = $id_regione;
                            $pv->comune = $comune->comune;
                            $pv->nome = $pdv->name;
                            $pv->data = $pdv->data;
                            $pv->lat = $pdv->lat;
                            $pv->lng = $pdv->lng;
                            $pv->address = $pdv->street;
                            $pv->id_pdv = $pdv->id;
                            $pv->coop = $pdv->coop;
                            $pv->data_creazione = (new \DateTime())->format('Y-m-d H:i:s');
                            $pv->data_aggiornamento = (new \DateTime())->format('Y-m-d H:i:s');
                            $pv->attivo = 1;
                        } else {
                            $pv->id_tipologia_punto_vendita = $id_tipologia_punto_vendita;
                            $pv->id_tipologia_stato = 1;
                            $pv->id_regione = $id_regione;
                            $pv->comune = $comune->comune;
                            $pv->nome = $pdv->name;
                            $pv->data = $pdv->data;
                            $pv->lat = $pdv->lat;
                            $pv->lng = $pdv->lng;
                            $pv->address = $pdv->street;
                            $pv->id_pdv = $pdv->id;
                            $pv->coop = $pdv->coop;
                            $pv->attivo = 1;
                        }
                        if(!$pv->save()){
                            $messages = [];
                            foreach($pv->getMessages() as $m){
                                $messages[] = $m->getMessage();
                            }
                            throw new \apps\cron\exception\CronException('Errore salvataggio '.implode('|', $messages), \apps\cron\exception\CronException::ERROR);
                        }
                    }
                    sleep(2);
                }
            }
            throw new \apps\cron\exception\CronException('Done', \apps\cron\exception\CronException::INFO);

        } catch(CronException $e){
            if($e->getCode() == \apps\cron\exception\CronException::INFO){
                echo 'INFO'.PHP_EOL;
            }
            print_r($e->getMessage());
            exit();
        } catch(Exception $e){
            echo 'errore'.PHP_EOL;
            print_r($e->getMessage());
            exit();
        }
        $this->view->disable();
    }


}